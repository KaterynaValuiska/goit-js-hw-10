{"mappings":"YASA,IAAMA,EAAaC,SAASC,cAAc,WACpCC,EAAYF,SAASC,cAAc,UACnCE,EAAcH,SAASC,cAAc,iBACrCG,EAAUJ,SAASC,cAAc,aAoFvC,SAASI,IACPC,OAAOC,QAAQ,sD,CAlFjBR,EAAWS,UAAUC,IAAI,QACzBP,EAAUM,UAAUC,IAAI,QCZfC,MAAM,uCACVC,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,M,IDabL,MAAK,SAACM,GACHC,QAAQC,IAAIF,GAYxB,SAAqBA,GACjB,IAAMG,EAASH,EACVI,KAAI,SAACC,GACF,MAAO,0BACiBC,OAAbD,EAAME,GAAG,MAAeD,OAAXD,EAAMG,KAAK,oB,IAGtCC,KAAK,IAEVvB,EAAYwB,UAAYP,C,CApBhBQ,CAAYX,E,IAEbY,OAAM,SAACC,GACRZ,QAAQC,IAAIW,GACZzB,G,IAEH0B,SAAQ,WAAM,IAkBrB5B,EAAY6B,iBAAiB,UAE7B,SAAqBC,GACnBlC,EAAWS,UAAU0B,OAAO,QAC5B9B,EAAQI,UAAUC,IAAI,QACpBL,EAAQuB,UAAY,GAGpB,IAAIQ,EAAUF,EAAIG,OAAOC,MACzBnB,QAAQC,IAAIc,EAAIG,OAAOC,QC1CPC,ED4CPH,EC3CLI,EAAe,IAAIC,gBAAgB,CACzCC,UAAWH,EACXI,QAAS,0EAEHC,EAAS,8CAA2DpB,OAAbgB,GAEpD7B,MAAMiC,GACRhC,MAAK,SAACC,GACT,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,M,KDiCjBL,MAAK,SAAC2B,GACHpB,QAAQC,IAAImB,GAcpB,SAAyBA,GACvB,IAAMlB,EAASkB,EACVjB,KAAI,SAAAuB,G,IAAGC,EAAGD,EAAHC,IAAK5B,EAAM2B,EAAN3B,OACJ6B,GAAW,EAAXC,GAAW,EAAXC,OAAWC,E,IAAhB,QAAKC,EAAAC,EAAelC,EAAMmC,OAAAC,cAArBP,GAAAI,EAAAC,EAAWG,QAAAC,MAAXT,GAAW,EAAY,CAAvB,IAAMxB,EAAN4B,EAAWb,MAOZ,MANY,qBACKd,OAAbsB,EAAI,WACLtB,OADcD,EAAMG,KAAK,oCAE/BF,OADMD,EAAMG,KAAK,mBAEIF,OADrBD,EAAMkC,YAAY,yCACqBjC,OAAlBD,EAAMmC,YAAY,wB,WALnCV,GAAW,EAAXC,EAAWU,C,aAAXZ,GAAW,MAAXK,EAAWQ,QAAXR,EAAWQ,Q,YAAXZ,E,MAAAC,C,MAUVtB,KAAK,IAENtB,EAAQuB,UAAYP,C,CA5BlBwC,CAAgBtB,E,IAEfT,OAAM,SAACC,GACNZ,QAAQC,IAAIW,GACZzB,G,IAEH0B,SAAQ,WACP3B,EAAQI,UAAU0B,OAAO,QACzBnC,EAAWS,UAAUC,IAAI,O,ICvD/B,IAAoB6B,EACZC,EAIAI,C","sources":["src/index.js","src/cat-api.js"],"sourcesContent":["import { fetchBreeds, fetchPosts } from \"./cat-api\";\n// import Notiflix from 'notiflix';\n// import SlimSelect from 'slim-select'\n\n// const slimSelect = new SlimSelect({\n//     select: '.breed-select',\n//     events: { afterChange: onSelectCat},\n// });\n\nconst loaderMess = document.querySelector('.loader');\nconst errorMess = document.querySelector('.error');\nconst breedSelect = document.querySelector('.breed-select');\nconst catInfo = document.querySelector('.cat-info');\n\n\nloaderMess.classList.add('hide');\nerrorMess.classList.add('hide');\n\nselectBreeds();\n\nfunction selectBreeds() {\n    fetchBreeds()\n        .then((breeds) => {\n            console.log(breeds);\n            renderBreed(breeds);\n            \n        }).catch((error) => {\n          console.log(error);\n          errorShow();\n})\n      .finally(() => {\n    \n    });\n};\n\nfunction renderBreed(breeds) {\n    const markup = breeds\n        .map((breed) => {\n            return `\n      <option value=\"${breed.id}\">${breed.name}</option>\n      `;\n        })\n        .join(\"\");\n    // slimSelect.setData(markup);\n    breedSelect.innerHTML = markup;\n}\n\n\nbreedSelect.addEventListener('change', onSelectCat)\n\nfunction onSelectCat(evt) {\n  loaderMess.classList.remove('hide');\n  catInfo.classList.add('hide');\n    catInfo.innerHTML = '';\n\n    // хочу тут присвоїти breedId індетифікатор вибраного кота, але як?\n    let breedId = evt.target.value;\n    console.log(evt.target.value);\n  \n  fetchPosts(breedId)\n    .then((breedId) => {\n        console.log(breedId);\n      fetchCatByBreed(breedId);\n        })\n      .catch((error) => {\n        console.log(error);\n        errorShow();\n      })\n    .finally(() => {\n      catInfo.classList.remove('hide');\n      loaderMess.classList.add('hide');\n      \n    }) \n}\n\nfunction fetchCatByBreed(breedId) {\n  const markup = breedId\n      .map(({ url, breeds }) => {\n          for (const breed of breeds) {\n              const cat = `\n      <img src=\"${url}\" alt=\"${breed.name}\" width=\"300\"/>\n      <div> <b>${breed.name}</b>\n      <p>${breed.description} </p>\n      <p> <b>Temperament:</b> ${breed.temperament}   </p>\n      </div>`;\n              return cat;\n        }\n    })\n    .join(\"\");\n    \n    catInfo.innerHTML = markup;\n\n}\n\n\n\nfunction errorShow() {\n  Notify.failure('Oops! Something went wrong! Try reloading the page!');\n}","\n\n\nfunction fetchBreeds() {\n  return fetch(\"https://api.thecatapi.com/v1/breeds\")\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    })\n}\n\n\n\nfunction fetchPosts(breedId) {\n  const searchParams = new URLSearchParams({\n  breed_ids: breedId,\n  api_key: \"live_R01pkXHrQNXKQvYeJccUarYSnPmiUXkBylskayNCHe0VBB6reFt08aZBMVBfbdKf\",\n  });\n  const urlCat = `https://api.thecatapi.com/v1/images/search?${searchParams}`;\n\n    return fetch(urlCat)\n        .then((response) => {\n      if (!response.ok) {\n        throw new Error(response.status);\n          }\n      return response.json();\n    }\n    )\n}\n\n\nexport { fetchBreeds, fetchPosts }\n\n"],"names":["$b8f9b7833fa37166$var$loaderMess","document","querySelector","$b8f9b7833fa37166$var$errorMess","$b8f9b7833fa37166$var$breedSelect","$b8f9b7833fa37166$var$catInfo","$b8f9b7833fa37166$var$errorShow","Notify","failure","classList","add","fetch","then","response","ok","Error","status","json","breeds","console","log","markup","map","breed","concat","id","name","join","innerHTML","$b8f9b7833fa37166$var$renderBreed","catch","error","finally","addEventListener","evt","remove","breedId1","target","value","breedId","searchParams","URLSearchParams","breed_ids","api_key","urlCat","param","url","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","description","temperament","err","return","$b8f9b7833fa37166$var$fetchCatByBreed"],"version":3,"file":"index.d4c1d1b5.js.map"}